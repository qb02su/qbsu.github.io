<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Go leetcode</title>
      <link href="/2020/02/18/go%20leetcode/"/>
      <url>/2020/02/18/go%20leetcode/</url>
      
        <content type="html"><![CDATA[<p>这里是用GO语言刷leetcode算法题的记录，会不定时更新</p><a id="more"></a><h2 id="1、两数之和"><a href="#1、两数之和" class="headerlink" title="1、两数之和"></a>1、两数之和</h2><h3 id="（1）暴力求解法"><a href="#（1）暴力求解法" class="headerlink" title="（1）暴力求解法"></a>（1）暴力求解法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">func twoSum(nums []int, target int) []int &#123;</span><br><span class="line">    res:&#x3D;make([]int,2,2)</span><br><span class="line">    flag:&#x3D;0</span><br><span class="line">    for i1,v1 :&#x3D;range(nums)&#123;</span><br><span class="line">        for i2,v2:&#x3D;range(nums)&#123;</span><br><span class="line">            if i1&#x3D;&#x3D;i2&#123;</span><br><span class="line">                continue</span><br><span class="line">            &#125;</span><br><span class="line">            if v1+v2&#x3D;&#x3D;target&#123;</span><br><span class="line">            res[0]&#x3D;i1</span><br><span class="line">            res[1]&#x3D;i2</span><br><span class="line">            flag&#x3D;1</span><br><span class="line">            break</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    if flag&#x3D;&#x3D;1&#123;</span><br><span class="line">        break</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>时间复杂度为o(n^2),效率很差</p><h3 id="（2）哈希表"><a href="#（2）哈希表" class="headerlink" title="（2）哈希表"></a>（2）哈希表</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">func twoSum(nums []int, target int) []int &#123;</span><br><span class="line">    res:&#x3D;make([]int,2,2)</span><br><span class="line">    hash:&#x3D;make(map[int]int)</span><br><span class="line">    for i,v:&#x3D;range(nums)&#123;</span><br><span class="line">        tempt:&#x3D;target-v</span><br><span class="line">        _,ok:&#x3D;hash[tempt]</span><br><span class="line">        if(ok)&#123;</span><br><span class="line">            res[0]&#x3D;hash[tempt]</span><br><span class="line">            res[1]&#x3D;i</span><br><span class="line">            break</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            hash[v]&#x3D;i</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用数据类型map，将value和key置换，只需要一次O(n) + O(1) 即可</p><h2 id="9-回文数"><a href="#9-回文数" class="headerlink" title="9.回文数"></a>9.回文数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">func isPalindrome(x int) bool &#123;</span><br><span class="line">    var sum int&#x3D;0</span><br><span class="line">var y int &#x3D;x</span><br><span class="line">if x&lt;0&#123;</span><br><span class="line">return false</span><br><span class="line">&#125;</span><br><span class="line">for x!&#x3D;0&#123;</span><br><span class="line">temp:&#x3D;x%10</span><br><span class="line">sum&#x3D;sum*10+temp</span><br><span class="line">x&#x3D;x&#x2F;10</span><br><span class="line">&#125;</span><br><span class="line">if sum&#x3D;&#x3D;y&#123;</span><br><span class="line">return true</span><br><span class="line">&#125;else&#123;</span><br><span class="line">return false</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>顺着题意把数字倒过来就行了</p><h2 id="13-罗马数字转整数"><a href="#13-罗马数字转整数" class="headerlink" title="13.罗马数字转整数"></a>13.罗马数字转整数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">func romanToInt(s string) int &#123;</span><br><span class="line">   var sum int&#x3D;0  romanMap:&#x3D;map[string]int&#123;&quot;M&quot;:1000,&quot;CM&quot;:900,&quot;D&quot;:500,&quot;CD&quot;:400,&quot;C&quot;:100,&quot;XC&quot;:90,&quot;L&quot;:50,&quot;XL&quot;:40,&quot;X&quot;:10,&quot;IX&quot;:9,&quot;V&quot;:5,&quot;IV&quot;:4,&quot;I&quot;:1&#125;</span><br><span class="line">for i:&#x3D;0;i&lt;len(s);i++ &#123;</span><br><span class="line">if (i &lt; len(s)-1) &#123;</span><br><span class="line">_, ok :&#x3D; romanMap[s[i:i+2]]</span><br><span class="line">if ok &#123;</span><br><span class="line">sum +&#x3D; romanMap[s[i:i+2]]</span><br><span class="line">i++</span><br><span class="line">&#125; else &#123;</span><br><span class="line">sum +&#x3D; romanMap[string(s[i])]</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">sum +&#x3D; romanMap[string(s[i])]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>切片范围是左闭右开给忘了-。-</p><h2 id="14-最长公共前缀"><a href="#14-最长公共前缀" class="headerlink" title="14.最长公共前缀"></a>14.最长公共前缀</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">func longestCommonPrefix(strs []string) string &#123;</span><br><span class="line">if len(strs) &#x3D;&#x3D; 0 &#123;</span><br><span class="line">return &quot;&quot;</span><br><span class="line">&#125;</span><br><span class="line">var result string</span><br><span class="line">if len(strs) &#x3D;&#x3D; 1 &#123;</span><br><span class="line">result &#x3D; strs[0]</span><br><span class="line">return result</span><br><span class="line">&#125;</span><br><span class="line">result &#x3D; strs[0]</span><br><span class="line">for i :&#x3D; 1; i &lt; len(strs); i++ &#123;</span><br><span class="line">if len(result)&gt;len(strs[i])&#123;</span><br><span class="line">result&#x3D;result[:len(strs[i])]</span><br><span class="line">&#125;</span><br><span class="line">for j:&#x3D;0;j&lt;len(result);j++&#123;</span><br><span class="line">if result[j]!&#x3D;strs[i][j]&#123;</span><br><span class="line">result&#x3D;result[:j]</span><br><span class="line">break</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二维数组遍历下</p><h2 id="20-有效的括号"><a href="#20-有效的括号" class="headerlink" title="20.有效的括号"></a>20.有效的括号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">func isValid(s string) bool &#123;</span><br><span class="line">var stack []byte</span><br><span class="line">m:&#x3D;map[byte]byte&#123;</span><br><span class="line">&#39;)&#39;:&#39;(&#39;,</span><br><span class="line">&#39;]&#39;:&#39;[&#39;,</span><br><span class="line">&#39;&#125;&#39;:&#39;&#123;&#39;,</span><br><span class="line">&#125;</span><br><span class="line">for _,value:&#x3D;range s&#123;</span><br><span class="line">length:&#x3D;len(stack)</span><br><span class="line">if length&gt;0&#123;</span><br><span class="line">if _,ok:&#x3D;m[byte(value)];ok&#123;</span><br><span class="line">if stack[length-1]&#x3D;&#x3D;m[byte(value)]&#123;</span><br><span class="line">stack&#x3D;stack[:length-1]</span><br><span class="line">continue</span><br><span class="line">&#125;</span><br><span class="line">return false</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">stack&#x3D;append(stack,byte(value))</span><br><span class="line">&#125;</span><br><span class="line">return len(stack)&#x3D;&#x3D;0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="21-合并两个有序链表"><a href="#21-合并两个有序链表" class="headerlink" title="21.合并两个有序链表"></a>21.合并两个有序链表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line"> * Definition for singly-linked list.</span><br><span class="line"> * type ListNode struct &#123;</span><br><span class="line"> *     Val int</span><br><span class="line"> *     Next *ListNode</span><br><span class="line"> * &#125;</span><br><span class="line"> *&#x2F;</span><br><span class="line">func mergeTwoLists(l1 *ListNode, l2 *ListNode) *ListNode &#123;</span><br><span class="line">head:&#x3D;&amp;ListNode&#123;&#125;</span><br><span class="line">newlist:&#x3D;head</span><br><span class="line">for l1!&#x3D;nil||l2!&#x3D;nil&#123;</span><br><span class="line">if l1&#x3D;&#x3D;nil||(l2!&#x3D;nil&amp;&amp;l1.Val&gt;l2.Val)&#123;</span><br><span class="line">newlist.Next&#x3D;l2</span><br><span class="line">newlist&#x3D;l2</span><br><span class="line">l2&#x3D;l2.Next</span><br><span class="line">&#125;else&#123;</span><br><span class="line">newlist.Next&#x3D;l1</span><br><span class="line">newlist&#x3D;l1</span><br><span class="line">l1&#x3D;l1.Next</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return head.Next</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="26-删除排序数组中的重复项"><a href="#26-删除排序数组中的重复项" class="headerlink" title="26. 删除排序数组中的重复项"></a><a href="https://leetcode-cn.com/problems/remove-duplicates-from-sorted-array/" target="_blank" rel="noopener">26. 删除排序数组中的重复项</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">func removeDuplicates(nums []int) int &#123;</span><br><span class="line">if len(nums)&#x3D;&#x3D;0 &#123;</span><br><span class="line">return 0</span><br><span class="line">&#125;</span><br><span class="line">currValue :&#x3D; nums[0]</span><br><span class="line">count:&#x3D; 1</span><br><span class="line">for i:&#x3D;0;i&lt;len(nums);i++ &#123;</span><br><span class="line">if nums[i] !&#x3D; currValue &#123;</span><br><span class="line">count ++</span><br><span class="line">currValue &#x3D; nums[i]</span><br><span class="line">            nums[count-1]&#x3D;currValue</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return count</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> go </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/02/16/hello-world/"/>
      <url>/2020/02/16/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
